We need to **completely rebuild** the authentication UI and logic. Please disregard the current login/register screens â€” **do not reuse or patch them**. Instead, follow these updated instructions:

---

## NEW AUTH UI: General Requirements

We will send a reference image for the new UI layout. Please wait for that.

### Until then, please prepare:
1. A **new unified auth screen** with two tabs:
   - Log In
   - Sign Up

2. Minimal field layout:
   - For **Log In**: `email`, `password`, "Forgot password?"
   - For **Sign Up**: `email`, `password`, `confirm password`, (optional) `first name`, `last name`

3. Visual style:
   - Inspired by our **landing page aesthetic**
   - Rounded corners, modern spacing, polished button hover states
   - Fully responsive, mobile-first

---

## Functionality Setup

Please answer and confirm the following before you begin implementation:

### 1. **What database schema is currently active in production?**
- Which fields are required for user creation?
- Do fields like `firstName`, `lastName`, `profileImageUrl`, or `googleId` exist in the current production DB?
- Are there any schema mismatches with what the frontend is submitting?

### 2. **Which ORM and database engine are we using?**
- Are we using **Drizzle ORM**?
- Is the database **PostgreSQL**? Confirm the engine.
- Are we still using any `db.query.raw` functions in user creation or auth logic?

### 3. **What is the correct user creation path?**
- Which file contains the canonical `createUser()` function?
- Where should the new form submit its data?

### 4. **Which fields should be required vs optional in the DB?**
- Confirm the expected types and nullability for all:
   - `email`, `password`, `firstName`, `lastName`, `googleId`, `role`, etc.

### 5. **Where are Google-authenticated users stored?**
- Are they saved to the same table?
- What logic prevents duplication/conflicts?

### 6. **Which tables are being used in Copilot vs B2C (main Briki app)?**
- Is there any overlap between company users and regular users?
- If so, how is role-based routing managed in the auth layer?

---

## Important Notes:
- Before starting the new auth screen UI, please ensure that:
   - The **registration** flow is functional
   - Database insertions are working correctly
   - Schema is fully aligned with frontend expectations

Let me know once these questions are answered and the environment is ready to begin the UI rebuild. We'll send over the new layout reference shortly.