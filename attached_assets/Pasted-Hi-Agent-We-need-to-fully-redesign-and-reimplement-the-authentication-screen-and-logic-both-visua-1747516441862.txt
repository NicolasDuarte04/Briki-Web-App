Hi Agent,

We need to fully redesign and reimplement the authentication screen and logic, both visually and functionally. Below are the exact issues, followed by the specific requirements for the rebuild:

---

## Issues Detected in the Current Auth System

### 1. **Non-functional UI**
- **No buttons are currently working:**
  - "Continue with Google" does not initiate Google login
  - "Sign Up" and "Log In" buttons are non-responsive
  - Terms of Service and Privacy Policy links are unclickable
- This renders the entire authentication page unusable.

### 2. **Visual Issues**
- **Color Scheme:**
  - The UI is still using **purple**, even though we’ve clearly deprecated that from our color palette.
  - The current design looks like a color overlay on top of a background ("like a filter behind glass")—this creates a cheap aesthetic.
- **Inconsistency:**
  - The visual design of the auth screen does not match the rest of the app.
  - It deviates from the **high-quality gradient-based landing page design** we approved.

---

## Rebuild Requirements

### UI Design
- **Color Palette:** Match the **gradient background and primary colors** from the landing page.
  - Use **Briki’s current gradient**: from deep navy (#003087) to bright teal (#33BFFF)
  - Avoid **purple** entirely.
- **Layout:**
  - Single-page **tabbed interface** with toggles for **Login** and **Signup**
  - **Animated background** (match landing page style)
- **Buttons & Inputs:**
  - All buttons must use the **correct shadcn/ui variants**
  - Proper hover, disabled, and error states
- **Mobile responsiveness** must be guaranteed.

### Authentication Functionality
- Rebuild authentication using the following structure:

#### Server-side
- `/auth/index.ts` – Main setup
- `/auth/google-auth.ts` – Google OAuth strategy
- `/auth/local-auth.ts` – Email/password strategy
- `/auth/session.ts` – Proper session handling
- `/routes/auth.ts` – Express routes for all auth logic

#### Client-side
- `src/contexts/AuthContext.tsx` – Unified context
- `src/hooks/use-auth.ts` – Single, centralized hook
- `src/pages/auth/index.tsx` – Entry point for the new UI
- `src/components/auth/`
  - `AuthForm.tsx`
  - `GoogleLoginButton.tsx`
  - `LoginForm.tsx`
  - `SignupForm.tsx`

### Functionality Checklist
- [ ] **Google Auth fully working** with redirects and persistent sessions
- [ ] **Email/password login** with validation, error handling, and feedback
- [ ] **Persistent sessions** on page reload
- [ ] **Proper redirects** after login to `/` (user) or `/company-dashboard` (company)
- [ ] **Centralized session management**
- [ ] **Toasts or inline feedback** for login errors, invalid inputs, success, etc.
- [ ] **Terms of Service and Privacy Policy links** must be clickable and styled correctly

---

## Extra Notes
- Please confirm that Passport.js, Zustand, and express-session are configured correctly
- Use `localStorage` or secure cookies (depending on our existing session approach)
- If you're unsure about any redirect logic, let us know so we can confirm the route behavior
- Let’s ensure this new screen works **across all devices** and gracefully handles auth failures

Let me know once this is done or if you require visual references again.