// Briki – Comparison Tool Refactor Prompt (Modal → Dedicated Screen)

Objective:
We are transitioning from a modal-based plan comparison model to a dedicated route at **/compare-plans** that offers a better UX and positions Briki’s comparison tool as a future standalone module.

Here is exactly what needs to be done:

——————————————————
1. **Remove Modal-Based Flow**
• Remove or disable the CompareModal and CompareButton components from all insurance category pages:
  - File references: 
    • client/src/components/compare-modal.tsx
    • client/src/components/compare-button.tsx
• Ensure that none of the /insurance/* pages trigger modal comparisons anymore.
• Plan selection checkboxes should remain functional.

——————————————————
2. **Global State for Plan Selection**
• Implement the Zustand store as outlined:
```ts
import create from 'zustand';

interface CompareState {
  selectedPlans: { id: number; category: string }[];
  addPlan: (plan: { id: number; category: string }) => void;
  removePlan: (id: number) => void;
  clearPlans: () => void;
}

export const useCompareStore = create<CompareState>((set) => ({
  selectedPlans: [],
  addPlan: (plan) => set((state) => ({
    selectedPlans: [...state.selectedPlans, plan]
  })),
  removePlan: (id) => set((state) => ({
    selectedPlans: state.selectedPlans.filter(p => p.id !== id)
  })),
  clearPlans: () => set({ selectedPlans: [] })
}));
```
• Replace per-page useState with useCompareStore for plan selection across:
  - /insurance/travel
  - /insurance/auto
  - /insurance/pet
  - /insurance/health

——————————————————
3. **Create /compare-plans Route**
• Add this route to App.tsx under MainLayout:
```tsx
<Route path="/compare-plans" component={ComparePlansPage} />
```
• This new screen should:
  - Pull selected plans from the global store
  - Show a side-by-side comparison (you may reuse CompareModal layout content)
  - Include a “Clear Comparison” button
  - Have proper scroll-to-top behavior

——————————————————
4. **UX Triggers & Navigation**
• When user selects 2+ plans on any /insurance/* page:
  - A sticky or fixed “Compare” button should appear
  - On click, route the user to **/compare-plans**
• Remove the “Compare X Plans” floating modal trigger from the screen entirely
• On leaving /compare-plans, clear the plan selection automatically

——————————————————
5. **Analytics and Backwards Compatibility**
• If analytics tracking exists for modal views, make sure we:
  - Replace with tracking on `/compare-plans` screen entry
  - Label interaction as “Comparison - Dedicated View”
• If necessary, keep modal components for now (commented out) to avoid regression

——————————————————
6. (Optional) Technical Enhancements
• If feasible, implement a “Compare X” badge in the navbar or menu when selectedPlans.length > 0
• Add route protection to redirect users to /auth if they attempt to compare with no auth token

——————————————————
Please confirm understanding with a detailed breakdown of your implementation plan.
Wait for confirmation before beginning.