I need you to perform a full, deep technical diagnosis and cleanup of the entire authentication system — across both the **user-facing Briki app** and any potential confusion with the **company (Copilot) side** of the platform.

Please review and report on the following areas with absolute clarity and correct any inconsistencies:

1. **User Auth Flow – Frontend & Backend**
   • Confirm all login and signup forms are using **email-based auth only** — no legacy `username` logic should exist anywhere.
   • Check if any components are still trying to send or validate a `username` field.
   • Ensure the confirm password validation works properly and matches in all flows.
   • Validate password rules (uppercase, lowercase, number, 8+ characters) are consistent between client and server.

2. **Error Messaging & UI Feedback**
   • Fix generic error messages like “Registration failed” — display specific backend errors (e.g. duplicate email, DB insert fail).
   • Unify the visual size, spacing, and styling between Login and Signup forms — they look different (check padding, width, shadow).
   • Add success indicators (e.g. green checkmarks, valid inputs) across all fields consistently.
   • Verify error styles (red outlines, tooltips, toast messages) are applied correctly across devices.

3. **Database Integration**
   • Ensure the backend is using **only the fields present in the actual `users` table** (email, password, role, etc.) — no references to `firstName`, `profileImageUrl`, etc.
   • Confirm you’ve replaced **all instances** of `db.query.raw` with valid Drizzle ORM methods. Run a complete scan.
   • Ensure registration inserts are succeeding in both development and production environments.

4. **Google OAuth Integration**
   • Verify Google login inserts a proper record in the users table and doesn’t conflict with manual signups using the same email.
   • Confirm `googleId` or similar fields are optional or handled separately if needed.

5. **Session & Persistence**
   • Confirm JWT tokens are issued and stored properly in localStorage.
   • Ensure auth state persists reliably between reloads on mobile and desktop.
   • If a user is already logged in, redirect away from login/signup screens.

6. **Forgot Password**
   • Confirm whether the “Forgot password?” link is functional. If not, hide it or implement a minimal version.
   • If implemented, verify the route sends a reset email or provides feedback.

7. **Copilot (Company) Auth**
   • Confirm you’re not accidentally applying fixes intended for the user auth system to the company/copilot login flow.
   • Make sure company auth logic and user auth logic are clearly separated and not causing database conflicts.

8. **Deployment Status**
   • Double-check that all fixes are deployed to the environment currently being tested (replit.dev or brikiapp.com).
   • Consider wiping and reseeding the auth tables if test users are creating conflicts.

---

**Final Output Expected:**
• A clean, functional signup and login experience (email + password + Google) with proper error handling.
• UI consistency between forms.
• Zero raw SQL queries.
• A working registration flow that accepts new, never-used emails and logs in correctly.

Let me know once all these items are reviewed, fixed, and verified with screenshots or logs.