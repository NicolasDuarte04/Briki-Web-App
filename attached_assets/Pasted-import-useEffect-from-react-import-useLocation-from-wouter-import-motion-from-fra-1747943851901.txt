import { useEffect } from "react";
import { useLocation } from "wouter";
import { motion } from "framer-motion";
import {
  ArrowRight,
  Sparkles,
  BarChart3,
  Clock,
  Star,
  Search,
  ListChecks
} from "lucide-react";
import { useAuth } from "@/hooks/use-auth";
import { useLanguage } from "@/components/language-selector";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import GradientButton from "@/components/gradient-button";
import { trackEvent } from "@/lib/analytics";
import Navbar from "@/components/navbar";

export default function Dashboard() {
  const [, navigate] = useLocation();
  const { user, isLoading } = useAuth();
  const { t } = useLanguage();

  // Track page view
  useEffect(() => {
    trackEvent("view_dashboard", "navigation", "home");
  }, []);

  // Animation variants
  const container = {
    hidden: { opacity: 0 },
    show: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.2
      }
    }
  };

  const item = {
    hidden: { opacity: 0, y: 20 },
    show: { 
      opacity: 1, 
      y: 0,
      transition: {
        type: "spring",
        stiffness: 50,
        damping: 20
      }
    }
  };

  // Get user's first name for personalized greeting
  const firstName = user?.firstName || user?.name?.split(' ')[0] || "there";

  // Action cards
  const actionCards = [
    {
      id: "compare",
      title: "Compare Insurance Plans",
      description: "View and compare plans across different providers",
      icon: <BarChart3 className="w-6 h-6 text-blue-500" />,
      path: "/compare-plans",
      color: "blue"
    },
    {
      id: "quote",
      title: "Get a Quote",
      description: "Answer a few questions to get personalized quotes",
      icon: <Search className="w-6 h-6 text-indigo-500" />,
      path: "/get-quote",
      color: "indigo"
    },
    {
      id: "track",
      title: "Track My Quotes",
      description: "View and manage your requested quotes",
      icon: <Clock className="w-6 h-6 text-purple-500" />,
      path: "/quote-history",
      color: "purple"
    },
    {
      id: "saved",
      title: "Saved Plans",
      description: "Access your bookmarked and saved plans",
      icon: <Star className="w-6 h-6 text-amber-500" />,
      path: "/saved-plans",
      color: "amber"
    }
  ];

  // Insurance categories
  const categories = [
    {
      id: "travel",
      title: t("travelInsurance"),
      path: "/insurance/travel",
    },
    {
      id: "auto",
      title: t("autoInsurance"),
      path: "/insurance/auto",
    },
    {
      id: "pet",
      title: t("petInsurance"),
      path: "/insurance/pet",
    },
    {
      id: "health",
      title: t("healthInsurance"),
      path: "/insurance/health",
    }
  ];

  return (
    <div className="min-h-screen flex flex-col">
      <Navbar />

      {/* Main content */}
      <main className="flex-grow max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        {/* Welcome section */}
        <motion.div
          variants={item}
          initial="hidden"
          animate="show"
          className="mb-10"
        >
          <h1 className="text-3xl md:text-4xl font-bold tracking-tight">
            <span className="text-gray-900 dark:text-white">Welcome back, </span>
            <span className="bg-clip-text text-transparent bg-gradient-to-r from-indigo-600 to-blue-500">
              {firstName}
            </span>
          </h1>
          <p className="mt-2 text-base md:text-lg text-gray-600 dark:text-gray-300">
            What would you like to do today?
          </p>
        </motion.div>

        {/* Quick access cards */}
        <motion.div
          variants={container}
          initial="hidden"
          animate="show"
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12"
        >
          {actionCards.map((card) => (
            <motion.div key={card.id} variants={item} whileHover={{ y: -5 }}>
              <Card className="h-full border border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900 shadow-sm hover:shadow-md transition-shadow duration-200">
                <CardHeader className="pb-2">
                  <div className={`p-3 rounded-full bg-${card.color}-100 dark:bg-${card.color}-900/30 w-fit mb-2`}>
                    {card.icon}
                  </div>
                  <CardTitle className="text-lg font-semibold">{card.title}</CardTitle>
                </CardHeader>
                <CardContent className="pb-4">
                  <CardDescription className="text-gray-600 dark:text-gray-400">
                    {card.description}
                  </CardDescription>
                </CardContent>
                <CardFooter className="pt-0">
                  <Button 
                    variant="ghost" 
                    className={`text-${card.color}-600 dark:text-${card.color}-400 hover:text-${card.color}-700 dark:hover:text-${card.color}-300 hover:bg-${card.color}-50 dark:hover:bg-${card.color}-900/20 p-0`}
                    onClick={() => navigate(card.path)}
                  >
                    <span>Get Started</span>
                    <ArrowRight className="ml-2 h-4 w-4" />
                  </Button>
                </CardFooter>
              </Card>
            </motion.div>
          ))}
        </motion.div>

        {/* Featured recommendation */}
        <motion.div
          variants={item}
          initial="hidden"
          animate="show"
          className="mb-12"
        >
          <Card className="overflow-hidden border border-gray-200 dark:border-gray-800 bg-gradient-to-br from-gray-50 to-white dark:from-gray-900 dark:to-gray-950">
            <div className="relative">
              <div className="absolute right-0 top-0 w-32 h-32 bg-gradient-to-br from-blue-500/10 to-indigo-500/10 blur-3xl rounded-full -mr-16 -mt-16"></div>
              <div className="absolute left-0 bottom-0 w-24 h-24 bg-gradient-to-br from-indigo-500/10 to-purple-500/10 blur-3xl rounded-full -ml-12 -mb-12"></div>

              <CardHeader>
                <div className="flex items-center space-x-2">
                  <Sparkles className="h-5 w-5 text-blue-500" />
                  <CardTitle className="text-xl font-semibold">Featured Recommendation</CardTitle>
                </div>
                <CardDescription>
                  Based on your profile and preferences
                </CardDescription>
              </CardHeader>

              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4 items-center">
                  <div className="md:col-span-2 space-y-4">
                    <h3 className="text-xl font-semibold text-gray-900 dark:text-white">Premium Travel Protection</h3>
                    <div className="space-y-2">
                      <div className="flex items-start gap-2">
                        <div className="flex-shrink-0 mt-1">
                          <div className="h-4 w-4 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center">
                            <ListChecks className="h-2 w-2 text-green-600 dark:text-green-400" />
                          </div>
                        </div>
                        <p className="text-sm text-gray-600 dark:text-gray-300">Comprehensive medical coverage up to $1,000,000</p>
                      </div>
                      <div className="flex items-start gap-2">
                        <div className="flex-shrink-0 mt-1">
                          <div className="h-4 w-4 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center">
                            <ListChecks className="h-2 w-2 text-green-600 dark:text-green-400" />
                          </div>
                        </div>
                        <p className="text-sm text-gray-600 dark:text-gray-300">Trip cancellation and interruption protection</p>
                      </div>
                      <div className="flex items-start gap-2">
                        <div className="flex-shrink-0 mt-1">
                          <div className="h-4 w-4 rounded-full bg-green-100 dark:bg-green-900/30 flex items-center justify-center">
                            <ListChecks className="h-2 w-2 text-green-600 dark:text-green-400" />
                          </div>
                        </div>
                        <p className="text-sm text-gray-600 dark:text-gray-300">24/7 emergency assistance with multilingual support</p>
                      </div>
                    </div>
                  </div>

                  <div className="flex flex-col items-center md:items-end space-y-3">
                    <div className="text-2xl font-bold text-gray-900 dark:text-white">$89<span className="text-sm font-normal text-gray-500">/trip</span></div>
                    <GradientButton 
                      onClick={() => navigate('/insurance/travel')}
                      gradientFrom="from-blue-600" 
                      gradientTo="to-indigo-600"
                      className="w-full md:w-auto"
                    >
                      View Details
                    </GradientButton>
                  </div>
                </div>
              </CardContent>
            </div>
          </Card>
        </motion.div>

        {/* Insurance Categories */}
        <motion.div
          variants={item}
          initial="hidden"
          animate="show"
          className="mb-16"
        >
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-2xl font-bold tracking-tight text-gray-900 dark:text-white">Insurance Categories</h2>
            <Button variant="ghost" className="text-blue-600 dark:text-blue-400" onClick={() => navigate('/categories')}>
              <span>View All</span>
              <ArrowRight className="ml-1 h-4 w-4" />
            </Button>
          </div>

          <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
            {categories.map((category) => (
              <Button
                key={category.id}
                variant="outline"
                className="h-auto flex flex-col items-center justify-center py-6 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-800 hover:bg-gray-50 dark:hover:bg-gray-900 transition-colors rounded-xl"
                onClick={() => navigate(category.path)}
              >
                <span className="text-base font-medium">{category.title}</span>
              </Button>
            ))}
          </div>
        </motion.div>
      </main>
    </div>
  );
}