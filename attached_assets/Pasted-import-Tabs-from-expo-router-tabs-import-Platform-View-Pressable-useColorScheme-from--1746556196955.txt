import { Tabs } from 'expo-router/tabs';
import { Platform, View, Pressable, useColorScheme } from 'react-native';
import { colors } from '../constants/Styles';

let IconSymbol;
try {
  IconSymbol = require('@/components/ui/IconSymbol').IconSymbol;
} catch (e) {
  IconSymbol = ({ name, color }) => (
    <View style={{ 
      width: 24, 
      height: 24, 
      backgroundColor: 'transparent',
      borderRadius: 12,
      borderWidth: 2,
      borderColor: color || '#4B76E5' 
    }} />
  );
}

const DefaultTabButton = (props) => {
  const { accessibilityState, onPress, children } = props;

  return (
    <Pressable
      onPress={onPress}
      style={{
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center',
        paddingVertical: 10,
      }}
    >
      {children}
    </Pressable>
  );
};

const DefaultTabBarBackground = () => {
  const colorScheme = useColorScheme();
  const backgroundColor = colorScheme === 'dark' ? '#0E0E0F' : '#F9F9F9';

  return (
    <View
      style={{
        position: 'absolute',
        left: 0,
        right: 0,
        bottom: 0,
        height: 85,
        backgroundColor,
        borderTopWidth: Platform.OS === 'ios' ? 0 : 1,
        borderTopColor: colorScheme === 'dark' ? '#1A1A1A' : '#DADADA',
        borderTopLeftRadius: 20,
        borderTopRightRadius: 20,
        overflow: 'hidden',
        elevation: 10,
        shadowColor: '#000',
        shadowOpacity: 0.05,
        shadowRadius: 8,
        shadowOffset: { width: 0, height: -4 },
      }}
    />
  );
};

export default function TabLayout() {
  const colorScheme = useColorScheme() || 'light';

  const TabButton = (() => {
    try {
      const { HapticTab } = require('@/components/HapticTab');
      return HapticTab || DefaultTabButton;
    } catch {
      return DefaultTabButton;
    }
  })();

  const TabBackground = (() => {
    try {
      return require('@/components/ui/TabBarBackground').default || DefaultTabBarBackground;
    } catch {
      return DefaultTabBarBackground;
    }
  })();

  const tabActiveTintColor = colors?.primary || '#4B76E5';

  return (
    <Tabs
      screenOptions={{
        tabBarActiveTintColor: tabActiveTintColor,
        headerShown: false,
        tabBarButton: (props) => <TabButton {...props} />,
        tabBarBackground: () => <TabBackground />,
        tabBarStyle: Platform.select({
          ios: { 
            position: 'absolute',
            backgroundColor: 'transparent',
            borderTopWidth: 0,
            elevation: 0,
          },
          android: {
            backgroundColor: 'transparent',
          },
        }),
        tabBarLabelStyle: {
          fontSize: 11,
          marginBottom: 4,
        },
      }}
    >
      <Tabs.Screen
        name="index"
        options={{
          title: 'Home',
          tabBarIcon: ({ color }) => <IconSymbol name="house.fill" color={color} />,
        }}
      />
      <Tabs.Screen
        name="explore"
        options={{
          title: 'Explore',
          tabBarIcon: ({ color }) => <IconSymbol name="safari.fill" color={color} />,
        }}
      />
      <Tabs.Screen
        name="active-plans"
        options={{
          title: 'Plans',
          tabBarIcon: ({ color }) => <IconSymbol name="briefcase.fill" color={color} />,
        }}
      />
      <Tabs.Screen
        name="Profile"
        options={{
          title: 'Profile',
          tabBarIcon: ({ color }) => <IconSymbol name="person.crop.circle.fill" color={color} />,
        }}
      />
    </Tabs>
  );
}